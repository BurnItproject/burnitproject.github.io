{"version":3,"sources":["theme.js","images/logo.jpg","images/logo2.png","components/CoineusLoading.js","utils/currency_format.js","redux/services/dexscreener.js","components/TokenInfoDialog.js","components/TokenListItem.js","redux/slices/coineusSlice.js","redux/store.js","utils/promisify.js","utils/get_balances.js","views/HomePage.js","utils/get_prices.js","components/BurntSupply.js","views/Stats.js","Coineus.js","hooks/useDexScreener.js","hooks/useWeb3Modal.js","index.js"],"names":["theme","createTheme","typography","fontFamily","palette","background","primary","main","components","MuiPaper","defaultProps","elevation","styleOverrides","elevation5","border","CoineusLoading","props","Dialog","open","DialogContent","style","margin","textAlign","src","cns_logo","alt","width","position","borderRadius","CircularProgress","size","thickness","Typography","marginTop","label","CoineusUSDFormat","number","isNaN","maxDigits","parseFloat","toFixed","match","length","minDigits","Intl","NumberFormat","minimumFractionDigits","maximumFractionDigits","currency","currencySign","currencyDisplay","format","CoineusCryptoFormat","maxFraction","DEXScreenerApi","createApi","reducerPath","baseQuery","fetchBaseQuery","baseUrl","endpoints","builder","getPair","query","chain_id","pair_address","getToken","token_address","useGetTokenQuery","useGetPairQuery","useStyles","makeStyles","networkChip","marginLeft","top","height","display","backgroundSize","backgroundImage","negative","color","positive","TokenInfoDialog","contract_address","network","close","wrap","skip","data","status","fullScreen","Button","onClick","right","zIndex","Grid","container","spacing","pairs","PairDetails","Markets","item","xs","classes","getColorClass","value","baseToken","name","symbol","replace","ListItem","ListItemAvatar","Avatar","chainId","className","clsx","ListItemText","secondary","fdv","priceUsd","priceNative","quoteToken","millify","liquidity","usd","base","quote","paddingLeft","fontWeight","priceChange","m5","h1","h6","h24","volume","txns","buys","sells","getDexLabel","id","List","map","pair","primaryTypographyProps","dexId","secondaryTypographyProps","pairAddress","TokenListItem","useTheme","wallet","useSelector","state","coineus","price","rewards","rewardsClaim","native","cnsDetails","useState","setOpen","undefined","balances","Paper","marginBottom","secondaryAction","inUSD","allTime","pending","balance","deposits","transfersIn","transfersOut","withdrawals","fees","bal","BigNumber","plus","sub","minus","dividedBy","getCNSEarned","initialState","address","chain","type","info","avax","fuse","bnb","eth","prices","totals","fUSDcontract","fUSDFUSEpair","CNSFUSEpair","VOLTFUSEpair","USDCAVAXpair","FOOKAVAXpair","FUDAVAXpair","HEDGEAVAXpair","BRNAVAXpair","BNBBUSDpair","FEGBNBpair","ETHUSDCPair","OKINAMIUSDCPair","FEGETHpair","rpc","tokens","coineusSlice","createSlice","reducers","updateWalletChain","action","payload","updateWalletAddress","updateWalletProviderType","updateInfo","updateBalances","updatePrices","updateTotals","total","Object","entries","resetWallet","updateTokens","JSON","parse","stringify","actions","configureStore","reducer","coineusReducer","middleware","getDefaultMiddleware","concat","makeBatchRequest","web3","calls","batch","BatchRequest","promises","call","Promise","res","rej","then","resp","req","request","err","add","execute","all","getUserBalances","wallet_address","store","getState","web3AVAX","Web3","usdc_contract","Contract","coineus_abi","burnit_contract","burnit_dividends_contract","dividend_distributor_abi","callsAVAX","getBalance","methods","balanceOf","getUnpaidEarnings","shares","shareholderClaims","minPeriod","avax_balance","usdc_balance","burnit_balance","burnit_unpaid","burnit_shares","burnit_shareHolderClaims","burnit_minPeriod","dispatch","timeToClaim","parseInt","Date","getTime","withdrawableDividends","totalDividends","secondsUntilAutoClaimAvailable","catch","console","log","getAVAX","HomePage","setPending","Container","maxWidth","window","provider","claimDividend","send","from","once","tx","on","error","receipt","variant","fullWidth","disabled","getPairPrices","usdc_avax","unipair_abi","burnit_avax","getReserves","usdc_avax_reserves","burnit_avax_reserves","avax_price","reserve1","reserve0","inAVAX","brn0","brn1","xyplot","BurnSupply","burnt","supply","percent","staked","angle","Math","PI","angle2","burntValue","colors","burned","padding","xDomain","yDomain","left","bottom","radiusDomain","center","x","y","angle0","opacity","radius","radius0","colorType","fontSize","direction","alignItems","Autorenew","marginRight","toLocaleString","Whatshot","BRN_TOKEN_ADDRESS","Stats","totalD","setTotalD","totalBurnt","setTotalBurnt","pollingInterval","useEffect","getCoineusInfo","interval","setInterval","clearInterval","contract","paddingBottom","backgroundColor","verticalAlign","Coineus","useDispatch","getDexScreener","tokenList","token_info","axios","get","push","useDexScreener","menuOpen","setMenuOpen","web3Modal","setWeb3Modal","web3ModalProvider","getWeb3Modal","providerOptions","walletconnect","description","package","WalletConnectProvider","options","bridge","qrcode","Web3Modal","disableInjectedProvider","cacheProvider","useWeb3Modal","web3mod","providerController","cachedProvider","connect","connectProvider","ethereum","changeWeb3Modal","subscribeProvider","getAccounts","accounts","net","getId","clearWallet","acc","networkId","currentProvider","clearCachedProvider","ThemeProvider","CssBaseline","AppBar","enableColorOnDark","Toolbar","IconButton","edge","to","textDecoration","logo","flexGrow","getChainLogo","substr","connectWallet","path","exact","element","Drawer","onClose","PaperProps","minWidth","alignSelf","ListSubheader","button","component","RouterLink","Link","href","target","sx","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.6d9ef544.chunk.js","sourcesContent":["import {createTheme} from \"@mui/material\";\n\n\nconst theme = createTheme({\n    typography: {\n        fontFamily: `'Quicksand', sans-serif`\n    },\n    palette: {\n        background: {\n            background: `linear-gradient(0deg, rgba(209,0,40,1) 0%, rgba(255,139,0,1) 35%, rgba(255,255,255,1) 100%)`\n        },\n        primary: {\n            main: '#D10028'//#75de00\n        }\n    },\n    components: {\n        MuiPaper: {\n            defaultProps: {\n                elevation: 5,\n            },\n            styleOverrides: {\n                elevation5: {\n                    border: '1px solid #D10028'\n                }\n            }\n        }\n    }\n});\n\nexport default theme;","export default __webpack_public_path__ + \"static/media/logo.96166a64.jpg\";","export default __webpack_public_path__ + \"static/media/logo2.8419d5cc.png\";","import {CircularProgress, Dialog, DialogContent, Typography} from \"@mui/material\";\nimport cns_logo from '../images/logo2.png'\n\nexport default function CoineusLoading(props) {\n\n    return <Dialog\n        open={props.open}\n        // PaperProps={{style: {backgroundColor: '#872eff', color: \"#fff\"}}}\n    >\n        <DialogContent>\n            <div style={{margin: '0 auto', textAlign: 'center'}}>\n                <img\n                    src={cns_logo}\n                    alt=\"BurnIt Logo\"\n                    width={100}\n                    style={{position: 'fixed', margin: 10, borderRadius: \"50%\"}}\n                />\n                <CircularProgress size={120} thickness={1}/>\n            </div>\n            <Typography textAlign=\"center\" style={{marginTop: 20}}>{props.label}</Typography>\n        </DialogContent>\n    </Dialog>\n}","export function CoineusUSDFormat(number) {\n\n    if(isNaN(number))return \"$--\";\n\n    if(number < 1/(10**12)){\n        return \"$0\";\n    }\n\n    // zeros after the decinals\n    let maxDigits = parseFloat(number).toFixed(12).match(/(\\.0*)/)[0].length + 1;\n\n    //max 12\n    if (maxDigits > 12) maxDigits = 12;\n    // handle cases like 300.000000123\n    if (number > 1) maxDigits = 2;\n\n    // currency, at least 2 digits\n    let minDigits = 2;\n    // very small $ value, show at least 4\n    if(number < 1) minDigits = 4;\n\n    //sanity check, max can't be lower than min\n    if(maxDigits < minDigits) maxDigits = minDigits;\n\n    if(number < 1/(10**16)){\n        minDigits = 2;\n        maxDigits = 2;\n    }\n\n    const NumberFormatter = new Intl.NumberFormat('en-US', {\n        minimumFractionDigits: minDigits,\n        maximumFractionDigits: maxDigits,\n        currency: 'USD',\n        currencySign: 'standard',\n        currencyDisplay: 'symbol',\n        style: 'currency'\n    });\n\n    return NumberFormatter.format(number);\n}\n\nexport function CoineusCryptoFormat(number) {\n\n    if(isNaN(number))return \"--\";\n\n    if(number < 1/(10**12)){\n        return 0;\n    }\n\n    let maxFraction = 4;\n\n    if (number > 1000) maxFraction = 0;\n\n    if (number < 1) maxFraction = 4;\n    if (number < .1) maxFraction = 5;\n    if (number < .01) maxFraction = 5;\n    if (number < .001) maxFraction = 7;\n    if (number < .0001) maxFraction = 8;\n    if (number < .00001) maxFraction = 9;\n    if (number < .000001) maxFraction = 10;\n    if (number < .0000001) maxFraction = 11;\n    if (number < .00000001) maxFraction = 12;\n    if (number < .000000001) maxFraction = 13;\n    if (number < .0000000001) maxFraction = 14;\n    if (number < .00000000001) maxFraction = 15;\n    if (number < .000000000001) maxFraction = 16;\n\n    const NumberFormatter = new Intl.NumberFormat('en-US', {\n        minimumFractionDigits: 0,\n        maximumFractionDigits: maxFraction,\n    });\n\n    return NumberFormatter.format(number);\n}","import { createApi, fetchBaseQuery } from '@reduxjs/toolkit/query/react'\n\nexport const DEXScreenerApi = createApi({\n    reducerPath: 'DEXScreenerApi',\n    baseQuery: fetchBaseQuery({ baseUrl: 'https://api.dexscreener.com/latest/dex/' }),\n    endpoints: builder => ({\n        getPair: builder.query({\n            query: ({chain_id, pair_address}) => `pairs/${chain_id}/${pair_address}`\n        }),\n        getToken: builder.query({\n            query: (token_address) => `tokens/${token_address}`\n        })\n    })\n})\n\nexport const { useGetPairQuery, useGetTokenQuery } = DEXScreenerApi\n","import {\n    Avatar, Button,\n    Dialog,\n    DialogContent,\n    Grid, List,\n    ListItem,\n    ListItemAvatar,\n    ListItemText,\n    Typography\n} from \"@mui/material\";\nimport {useGetTokenQuery} from \"../redux/services/dexscreener\";\nimport clsx from \"clsx\";\n\nimport {makeStyles} from \"@mui/styles\";\nimport {CoineusCryptoFormat, CoineusUSDFormat} from \"../utils/currency_format\";\n\nimport millify from \"millify\";\n\nconst useStyles = makeStyles((theme) => ({\n    networkChip: {\n        borderRadius: \"50%\",\n        marginLeft: 30,\n        position: 'absolute',\n        top: 42,\n        height: 16,\n        width: 16,\n        display: 'inline-block',\n        backgroundSize: 'cover',\n        '&.fuse': {\n            backgroundImage: `url('https://coineus.app/assets/tokens/fuse/logo.png')`,\n        },\n        '&.avax': {\n            backgroundImage: `url('https://coineus.app/assets/tokens/avax/logo.png')`,\n        },\n        '&.bnb': {\n            backgroundImage: `url('https://coineus.app/assets/tokens/bnb/logo.png')`,\n        },\n        '&.eth': {\n            backgroundImage: `url('https://coineus.app/assets/tokens/eth/logo.png')`,\n        }\n    },\n    negative: {\n        color: 'red'\n    },\n    positive: {\n        color: 'green'\n    }\n}));\n\nexport default function TokenInfoDialog(props) {\n\n    const {contract_address, network, open, close, wrap} = props;\n\n    const {data, status} = useGetTokenQuery(wrap || contract_address, {\n        skip: !open\n    });\n\n    return <Dialog open={open} fullScreen>\n        <DialogContent>\n            <Button onClick={close} style={{position: 'absolute', top: 15, right: 15, zIndex: 99999}}>Close</Button>\n            <Grid container spacing={2}>\n                {\n                    status === 'fulfilled'\n                    && data.pairs\n                    && data.pairs.length !== 0\n                    && <>\n                        <PairDetails\n                            contract_address={contract_address}\n                            data={data.pairs[0]}\n                            network={network}\n                        />\n                    <Markets data={data.pairs}/>\n                    </>\n                }\n                {\n                    status === 'fulfilled'\n                    && data.pairs\n                    && !data.pairs.length\n                    && <Grid item xs={12}><Typography>No pairs found</Typography></Grid>\n                }\n            </Grid>\n        </DialogContent>\n    </Dialog>\n}\n\nfunction PairDetails(props) {\n\n    const classes = useStyles();\n\n    const {data, network, contract_address} = props;\n\n    const getColorClass = (value) => {\n        if (value === 0) return '';\n\n        return value > 0 ? classes.positive : classes.negative\n    }\n\n    let {name, symbol} = data.baseToken;\n\n    if(contract_address === 'native'){\n        name = name.replace('Wrapped ', '')\n        symbol = symbol.replace('W', '')\n    }\n\n    return <Grid item xs={12}>\n        <ListItem>\n            <ListItemAvatar>\n                <Avatar src={`https://coineus.app/assets/tokens/${network}/${contract_address === 'native' ? '' : contract_address + '/'}/logo.png`}/>\n                {data.chainId && <span className={clsx(classes.networkChip, data.chainId)}/>}\n            </ListItemAvatar>\n            <ListItemText\n                primary={name}\n                secondary={symbol}\n            />\n        </ListItem>\n        <ListItem>\n            <ListItemText\n                primary={CoineusUSDFormat(data.fdv)}\n                secondary=\"Fully Diluted Value\"\n            />\n        </ListItem>\n        <ListItem>\n            <ListItemText\n                primary={CoineusUSDFormat(data.priceUsd)}\n                secondary=\"Price in USD\"\n            />\n            <ListItemText\n                primary={CoineusCryptoFormat(data.priceNative)}\n                secondary={`Price in ${data.quoteToken.symbol}`}\n            />\n        </ListItem>\n        <ListItem>\n            <ListItemText\n                primary={'$'+millify(data.liquidity.usd)}\n                secondary=\"Liquidity\"\n            />\n            <ListItemText\n                primary={millify(data.liquidity.base)}\n                secondary={data.baseToken.symbol}\n            />\n            <ListItemText\n                primary={millify(data.liquidity.quote)}\n                secondary={data.quoteToken.symbol}\n            />\n        </ListItem>\n\n        <Typography style={{paddingLeft: 15, marginTop: 10, fontWeight: 700}}>Price Change</Typography>\n        <ListItem>\n            <ListItemText\n                primary={data.priceChange.m5 + \"%\"}\n                secondary=\"5 mins\"\n                className={getColorClass(data.priceChange.m5)}\n            />\n            <ListItemText\n                primary={data.priceChange.h1 + \"%\"}\n                secondary=\"1 hr\"\n                className={getColorClass(data.priceChange.h1)}\n            />\n            <ListItemText\n                primary={data.priceChange.h6 + \"%\"}\n                secondary=\"6 hrs\"\n                className={getColorClass(data.priceChange.h6)}\n            />\n            <ListItemText\n                primary={data.priceChange.h24 + \"%\"}\n                secondary=\"24 hrs\"\n                className={getColorClass(data.priceChange.h24)}\n            />\n        </ListItem>\n\n        <Typography style={{paddingLeft: 15, marginTop: 10, fontWeight: 700}}>Volume</Typography>\n        <ListItem>\n            <ListItemText\n                primary={'$'+millify(data.volume.m5)}\n                secondary=\"5 mins\"\n            />\n            <ListItemText\n                primary={'$'+millify(data.volume.h1)}\n                secondary=\"1 hr\"\n            />\n            <ListItemText\n                primary={'$'+millify(data.volume.h6)}\n                secondary=\"6 hrs\"\n            />\n            <ListItemText\n                primary={'$'+millify(data.volume.h24)}\n                secondary=\"24 hrs\"\n            />\n        </ListItem>\n\n        <Typography style={{paddingLeft: 15, marginTop: 10, fontWeight: 700}}>Transactions (Buys/Sells)</Typography>\n        <ListItem>\n            <ListItemText\n                primary={`${data.txns.m5.buys}/${data.txns.m5.sells}`}\n                secondary=\"5 mins\"\n            />\n            <ListItemText\n                primary={`${data.txns.h1.buys}/${data.txns.h1.sells}`}\n                secondary=\"1 hr\"\n            />\n            <ListItemText\n                primary={`${data.txns.h6.buys}/${data.txns.h6.sells}`}\n                secondary=\"6 hrs\"\n            />\n            <ListItemText\n                primary={`${data.txns.h24.buys}/${data.txns.h24.sells}`}\n                secondary=\"24 hrs\"\n            />\n        </ListItem>\n    </Grid>\n}\n\nfunction Markets(props) {\n\n    const {data} = props;\n\n    const getColorClass = (value) => {\n        if (value === 0) return '';\n\n        return value > 0 ? 'green' : 'red'\n    }\n\n    const getDexLabel = (id) => {\n        switch(id){\n            case \"voltagefinance\":\n                return \"Voltage Finance\";\n            case \"elkfinance\":\n                return \"Elk Finance\";\n            case \"sushiswap\":\n                return \"Sushi Swap\";\n            case \"traderjoe\":\n                return \"Trader Joe\";\n            case \"pangolin\":\n                return \"Pangolin\";\n            case \"swapsicle\":\n                return \"Swapsicle\";\n            case \"yetiswap\":\n                return \"Yeti Swap\";\n            case \"pancakeswap\":\n                return \"Pancake Swap\";\n            case \"uniswap\":\n                return \"Uniswap\";\n            default:\n                return \"Unknown DEX\";\n        }\n    }\n\n    return <Grid item xs={12}>\n        <Typography style={{paddingLeft: 15, marginTop: 10, fontWeight: 700}}>Markets</Typography>\n        <List>\n\n            {\n                data.map(pair => {\n                    return <ListItem key={pair.pairAddress}>\n                        <ListItemText\n                            primary={<><span style={{fontWeight: 300}}>{pair.baseToken.symbol}/</span>{pair.quoteToken.symbol}</>}\n                            primaryTypographyProps={{fontWeight:700}}\n                            secondary={`${getDexLabel(pair.dexId)} - $${millify(pair.liquidity.usd)}`}\n                        />\n                        <ListItemText\n                            primary={CoineusUSDFormat(pair.priceUsd)}\n                            secondary={pair.priceChange.h24 + \"%\"}\n                            primaryTypographyProps={{textAlign: \"right\"}}\n                            secondaryTypographyProps={{textAlign: \"right\", color: getColorClass(pair.priceChange.h24)}}\n                        />\n                    </ListItem>\n                })\n            }\n\n        </List>\n    </Grid>\n}","import {Avatar, ListItem, ListItemAvatar, ListItemText, Paper} from \"@mui/material\";\nimport {CoineusUSDFormat, CoineusCryptoFormat} from \"../utils/currency_format\";\nimport clsx from \"clsx\";\nimport {makeStyles} from \"@mui/styles\";\n\nimport { useTheme } from '@mui/material/styles';\nimport TokenInfoDialog from \"./TokenInfoDialog\";\nimport {useState} from \"react\";\nimport {useSelector} from \"react-redux\";\nimport {BigNumber} from \"bignumber.js\";\n\nconst useStyles = makeStyles((theme) => ({\n    networkChip: {\n        borderRadius: \"50%\",\n        marginLeft: 30,\n        position: 'absolute',\n        top: 42,\n        height: 16,\n        width: 16,\n        display: 'inline-block',\n        backgroundSize: 'cover',\n        '&.fuse': {\n            backgroundImage: `url('https://coineus.app/assets/tokens/fuse/logo.png')`,\n        },\n        '&.avax': {\n            backgroundImage: `url('https://coineus.app/assets/tokens/avax/logo.png')`,\n        },\n        '&.bnb': {\n            backgroundImage: `url('https://coineus.app/assets/tokens/bnb/logo.png')`,\n        },\n        '&.eth': {\n            backgroundImage: `url('https://coineus.app/assets/tokens/eth/logo.png')`,\n        }\n    }\n}));\n\nexport default function TokenListItem(props) {\n\n    const classes = useStyles();\n\n    const theme = useTheme();\n\n    const {wallet} = useSelector(state => state.coineus);\n\n    const {contract_address, name, network, price, rewards, rewardsClaim, native, wrap, cnsDetails} = props;\n\n    const [open, setOpen] = useState(false);\n\n    if (wallet.balances[network] === undefined) {\n        return <></>;\n    }\n\n    const getCNSEarned = () => {\n        const {balance, deposits, transfersIn, transfersOut, withdrawals, fees} = cnsDetails;\n\n        const bal = new BigNumber(0).plus(balance);\n\n        const sub = new BigNumber(0).plus(deposits).plus(transfersIn).minus(withdrawals).minus(transfersOut).minus(fees);\n\n        return bal.minus(sub).dividedBy(10**18);\n    }\n\n    return <Paper style={{marginTop: 10, marginBottom: 5}}>\n        <ListItem secondaryAction={props.secondaryAction}>\n            <ListItemAvatar onClick={() => setOpen(true)}>\n                <Avatar\n                    src={`https://coineus.app/assets/tokens/${network}/${contract_address === 'native' ? '' : contract_address + '/'}logo.png`}/>\n                {network && !native && <span className={clsx(classes.networkChip, network)}/>}\n            </ListItemAvatar>\n            <ListItemText\n                primary={name}\n                secondary={CoineusUSDFormat(price?.inUSD)}\n                primaryTypographyProps={{fontWeight: 700}}\n            />\n            <ListItemText\n                primary={CoineusCryptoFormat(wallet.balances[network][contract_address])}\n                secondary={CoineusUSDFormat(price?.inUSD * wallet.balances[network][contract_address])}\n                primaryTypographyProps={{textAlign: 'right', fontWeight: 700}}\n                secondaryTypographyProps={{textAlign: 'right'}}\n            />\n        </ListItem>\n\n        {\n            rewards && <>\n                <ListItem style={{color: theme.palette.primary.main}}>\n                    <ListItemText\n                        primary='Rewards All-time'\n                        secondary='Pending'\n                        primaryTypographyProps={{fontWeight: 700}}\n                    />\n                    <ListItemText\n                        primary={`${CoineusCryptoFormat(rewards.allTime)} ${rewards.symbol}`}\n                        secondary={`${CoineusCryptoFormat(rewards.pending)} ${rewards.symbol}`}\n                        primaryTypographyProps={{textAlign: 'right', fontWeight: 700}}\n                        secondaryTypographyProps={{textAlign: 'right'}}\n                    />\n                </ListItem>\n                {rewardsClaim}\n            </>\n        }\n\n        {\n            cnsDetails && <>\n                <ListItem style={{color: theme.palette.primary.main}}>\n                    <ListItemText\n                        primary='Rewards All-time'\n                        primaryTypographyProps={{fontWeight: 700}}\n                    />\n                    <ListItemText\n                        primary={`${CoineusCryptoFormat(getCNSEarned())} CNSONE`}\n                        primaryTypographyProps={{textAlign: 'right', fontWeight: 700}}\n                    />\n                </ListItem>\n            </>\n        }\n\n\n        {/*TODO work on token details*/}\n        <TokenInfoDialog\n            contract_address={contract_address}\n            wrap={wrap}\n            network={network}\n            open={open}\n            close={() => setOpen(false)}/>\n    </Paper>\n}","import {createSlice} from \"@reduxjs/toolkit\";\n\nconst initialState = {\n    wallet: {\n        address: undefined,\n        chain: undefined,\n        type: undefined,\n\n        info: {\n            avax: {},\n            fuse: {},\n            bnb: {},\n            eth: {}\n        },\n\n        balances: {\n            avax: {},\n            fuse: {},\n            bnb: {},\n            eth: {}\n        },\n\n        prices: {\n            avax: {},\n            fuse: {},\n            bnb: {},\n            eth: {}\n        },\n\n        totals: {\n            avax: 0,\n            fuse: 0,\n            bnb: 0,\n            eth: 0\n        }\n    },\n    pairs: {\n        fUSDcontract: '0x249be57637d8b013ad64785404b24aebae9b098b',\n        fUSDFUSEpair: '0x933a10d094592eb3f2a26bcb366472eba8868a66',\n        CNSFUSEpair: '0x0f2e60b799f2237633754f8eec7970c125e15d75',\n        VOLTFUSEpair: '0xa670b12f8485aa379e99cf097017785b6aca5968',\n\n        USDCAVAXpair: '0xf4003f4efbe8691b60249e6afbd307abe7758adb',\n        FOOKAVAXpair: '0x3433b681141B4506B71AEAd3120b264bd9c12863',\n        FUDAVAXpair: '0x3e7f1923ddb73a05ca84721b92104a0dffff4005',\n        HEDGEAVAXpair: '0xb28031e312446415bd316c4fff52b99055c28870',\n        BRNAVAXpair: '0x2f2ac0b0de45af118e97f73b2ca9bd65b06e0894',\n\n        BNBBUSDpair: '0x16b9a82891338f9bA80E2D6970FddA79D1eb0daE',\n        FEGBNBpair: '0x2Aa763656A92ce1e6E560c3EA76b4C5fca7C6C14',\n\n        ETHUSDCPair: '0xB4e16d0168e52d35CaCD2c6185b44281Ec28C9Dc',\n        OKINAMIUSDCPair: '0x5ad7452cEafDaeb0936507D5BB5890964eF56Bd3',\n        FEGETHpair: '0x854373387E41371Ac6E307A1F29603c6Fa10D872',\n    },\n    rpc: {\n        fuse: 'https://rpc.fuse.io/',\n        avax: 'https://api.avax.network/ext/bc/C/rpc',\n        bnb: 'https://bsc-dataseed1.binance.org/',\n        eth: 'https://cloudflare-eth.com/'\n    },\n    tokens : {}\n};\n\nconst coineusSlice = createSlice({\n    name: 'coineus',\n    initialState,\n    reducers: {\n\n        updateWalletChain(state, action) {\n            state.wallet.chain = action.payload\n        },\n\n        updateWalletAddress(state, action) {\n            state.wallet.address = action.payload\n        },\n\n        updateWalletProviderType(state, action) {\n            state.wallet.type = action.payload\n        },\n\n        updateInfo(state, action) {\n            if(!state.wallet.info[action.payload.chain][action.payload.contract_address]){\n                state.wallet.info[action.payload.chain][action.payload.contract_address] = {};\n            }\n            state.wallet.info[action.payload.chain][action.payload.contract_address] = action.payload.info;\n        },\n\n        updateBalances(state, action) {\n            if(!state.wallet.balances[action.payload.chain][action.payload.contract_address]){\n                state.wallet.balances[action.payload.chain][action.payload.contract_address] = 0;\n            }\n            state.wallet.balances[action.payload.chain][action.payload.contract_address] = action.payload.balance;\n        },\n\n        updatePrices(state, action) {\n            if(!state.wallet.prices[action.payload.chain][action.payload.contract_address]){\n                state.wallet.prices[action.payload.chain][action.payload.contract_address] = {};\n            }\n            state.wallet.prices[action.payload.chain][action.payload.contract_address] = action.payload.price;\n        },\n\n        updateTotals(state, action) {\n            let total = 0;\n            Object.entries(state.wallet.balances[action.payload]).map(([contract_address,balance]) => {\n                if(state.wallet.prices[action.payload][contract_address]){\n                    total += balance*state.wallet.prices[action.payload][contract_address].inUSD;\n                }\n                return [contract_address,balance];\n            })\n            state.wallet.totals[action.payload] = total;\n        },\n\n        resetWallet(state) {\n            state.wallet.chain = undefined;\n            state.wallet.address = undefined;\n            state.wallet.type = undefined;\n        },\n\n        updateTokens(state, action) {\n            state.tokens = JSON.parse(JSON.stringify(action.payload));\n        }\n\n    }\n});\n\nexport const {\n    updateWalletChain,\n    updateWalletAddress,\n    updateWalletProviderType,\n\n    updateInfo,\n    updateBalances,\n    updatePrices,\n    updateTotals,\n\n    resetWallet,\n\n    updateTokens\n} = coineusSlice.actions;\n\nexport default coineusSlice.reducer;\n","import {configureStore} from '@reduxjs/toolkit';\nimport coineusReducer from \"./slices/coineusSlice\";\nimport {DEXScreenerApi} from \"./services/dexscreener\";\n\nexport default configureStore({\n    reducer: {\n        coineus: coineusReducer,\n        [DEXScreenerApi.reducerPath]: DEXScreenerApi.reducer,\n    },\n    middleware: getDefaultMiddleware => getDefaultMiddleware().concat(\n        DEXScreenerApi.middleware,\n    )\n})\n","export const makeBatchRequest = (web3, calls) => {\n    let batch = new web3.BatchRequest();\n\n    let promises = calls.map(call => {\n        return new Promise((res, rej) => {\n\n            if(call instanceof Promise){\n                return call.then(resp=>res(resp));\n            }\n\n            let req = call.request({}, (err, data) => {\n                if(err) rej(err);\n                else res(data)\n            });\n            batch.add(req)\n        })\n    })\n    batch.execute()\n\n    return Promise.all(promises);\n}\n\n","import store from \"../redux/store\";\nimport Web3 from \"web3\";\nimport {makeBatchRequest} from \"./promisify\";\nimport {updateBalances, updateInfo, updateTotals} from \"../redux/slices/coineusSlice\";\nimport coineus_abi from \"../abis/coineus.json\";\nimport dividend_distributor_abi from \"../abis/DividendDistributor.json\";\n\nexport default function getUserBalances(wallet_address) {\n    const _store = store.getState();\n    const {pairs, rpc} = _store.coineus;\n\n    if(wallet_address === undefined){\n        return;\n    }\n\n    getAVAX(pairs, rpc.avax, wallet_address);\n}\n\nfunction getAVAX(pairs, rpc, wallet_address) {\n\n    const web3AVAX = new Web3(rpc);\n    const usdc_contract = new web3AVAX.eth.Contract(coineus_abi, '0xB97EF9Ef8734C71904D8002F8b6Bc66Dd9c48a6E');\n    const burnit_contract = new web3AVAX.eth.Contract(coineus_abi, '0x9CcAd19669259C1FBF13FDa959400C871b3d0E00');\n    const burnit_dividends_contract = new web3AVAX.eth.Contract(dividend_distributor_abi, '0x32b82215a5ebb48acf7faadded562bc175716920');\n\n    const callsAVAX = [\n        web3AVAX.eth.getBalance(wallet_address),\n        usdc_contract.methods.balanceOf(wallet_address).call,\n        burnit_contract.methods.balanceOf(wallet_address).call,\n\n        burnit_dividends_contract.methods.getUnpaidEarnings(wallet_address).call,\n        burnit_dividends_contract.methods.shares(wallet_address).call,\n        burnit_dividends_contract.methods.shareholderClaims(wallet_address).call,\n        burnit_dividends_contract.methods.minPeriod().call,\n    ];\n\n    makeBatchRequest(web3AVAX, callsAVAX).then(resp => {\n        let [\n            avax_balance,\n            usdc_balance,\n            burnit_balance,\n\n            burnit_unpaid,\n            burnit_shares,\n            burnit_shareHolderClaims,\n            burnit_minPeriod,\n        ] = resp;\n\n        store.dispatch(updateBalances({\n            chain: 'avax',\n            contract_address: 'native',\n            balance: avax_balance / (10 ** 18)\n        }))\n\n        store.dispatch(updateBalances({\n            chain: 'avax',\n            contract_address: '0xB97EF9Ef8734C71904D8002F8b6Bc66Dd9c48a6E', //usdc\n            balance: usdc_balance / (10 ** 6)\n        }))\n\n        store.dispatch(updateBalances({\n            chain: 'avax',\n            contract_address: '0x9CcAd19669259C1FBF13FDa959400C871b3d0E00', //burnit\n            balance: burnit_balance / (10 ** 9)\n        }))\n\n        let timeToClaim = (parseInt(burnit_shareHolderClaims) + parseInt(burnit_minPeriod)) - (new Date).getTime()/1000;\n        if(timeToClaim < 0) timeToClaim = 0\n        store.dispatch(updateInfo({\n            chain: 'avax',\n            contract_address: '0x9CcAd19669259C1FBF13FDa959400C871b3d0E00',\n            info: {\n                withdrawableDividends: burnit_unpaid / (10**6),\n                totalDividends: burnit_shares[2] / (10**6),\n                secondsUntilAutoClaimAvailable: timeToClaim\n            }\n        }));\n\n        store.dispatch(updateTotals('avax'));\n\n    })\n        .catch(console.log)\n}","import {useSelector} from \"react-redux\";\nimport {\n    Button,\n    Container,\n    Grid,\n    ListItem,\n} from \"@mui/material\";\n\nimport Web3 from \"web3\";\nimport dividend_distributor_abi from \"../abis/DividendDistributor.json\";\n\nimport {useState} from \"react\";\n\nimport CoineusLoading from \"../components/CoineusLoading\";\nimport TokenListItem from \"../components/TokenListItem\";\nimport getUserBalances from \"../utils/get_balances\";\n\nexport default function HomePage() {\n\n    const {wallet} = useSelector(state => state.coineus);\n    const [pending, setPending] = useState(false);\n\n    const claimBurnit = () => {\n        if (wallet.address) {\n            const web3 = new Web3(window.provider);\n            const contract = new web3.eth.Contract(dividend_distributor_abi, '0x32b82215a5ebb48acf7faadded562bc175716920');\n\n            contract.methods\n                .claimDividend()\n                .send({from: wallet.address})\n                .once('transactionHash', function (tx) {\n                    setPending(true)\n                })\n                .on('error', function (error) {\n                    setPending(false)\n                })\n                .then(function (receipt) {\n                    getUserBalances(wallet.address);\n                    setPending(false);\n                });\n        }\n    }\n\n    return (<Container maxWidth=\"sm\">\n            <Grid container spacing={2} style={{marginTop: -5}}>\n\n                <Grid item xs={12}>\n\n                    <TokenListItem\n                        contract_address=\"native\"\n                        network=\"avax\"\n                        name=\"AVAX\"\n                        native\n                        price={wallet.prices.avax?.native}\n                        wrap=\"0xB31f66AA3C1e785363F0875A1B74E27b85FD66c7\"\n                    />\n\n\n                    {/*USDC*/}\n                    <TokenListItem\n                        contract_address=\"0xB97EF9Ef8734C71904D8002F8b6Bc66Dd9c48a6E\"\n                        network=\"avax\"\n                        name=\"USDC\"\n                        price={wallet.prices.avax?.[\"0xB97EF9Ef8734C71904D8002F8b6Bc66Dd9c48a6E\"]}\n                    />\n\n\n                    {/*BRN*/}\n                    <TokenListItem\n                        contract_address=\"0x9CcAd19669259C1FBF13FDa959400C871b3d0E00\"\n                        network=\"avax\"\n                        name=\"BRN\"\n                        price={wallet.prices.avax?.[\"0x9CcAd19669259C1FBF13FDa959400C871b3d0E00\"]}\n                        rewards={{\n                            allTime: wallet.info.avax?.[\"0x9CcAd19669259C1FBF13FDa959400C871b3d0E00\"]?.totalDividends,\n                            pending: wallet.info.avax?.[\"0x9CcAd19669259C1FBF13FDa959400C871b3d0E00\"]?.withdrawableDividends,\n                            symbol: 'USDC'\n                        }}\n                        rewardsClaim={\n                            <ListItem style={{color: '#fbca00'}}>\n                                <Button onClick={claimBurnit}\n                                        style={{marginBottom:10}}\n                                        variant='contained'\n                                        fullWidth\n                                        disabled={\n                                            wallet.chain !== 43114 ||\n                                            wallet.info.avax?.[\"0x9CcAd19669259C1FBF13FDa959400C871b3d0E00\"]?.withdrawableDividends === 0 ||\n                                            !wallet.address ||\n                                            wallet.info.avax?.[\"0x9CcAd19669259C1FBF13FDa959400C871b3d0E00\"]?.secondsUntilAutoClaimAvailable > 0\n                                        }>{wallet.chain !== 43114 ? 'Change to AVAX Chain' : `Claim ${wallet.info.avax?.[\"0x9CcAd19669259C1FBF13FDa959400C871b3d0E00\"]?.secondsUntilAutoClaimAvailable > 0 ? 'Wait' : ''}`}</Button>\n                            </ListItem>\n                        }\n                    />\n                </Grid>\n            </Grid>\n\n            <CoineusLoading open={pending} label=\"Transaction Pending\"/>\n\n        </Container>\n    );\n}","import store from \"../redux/store\";\nimport Web3 from \"web3\";\nimport unipair_abi from \"../abis/IUniswapV2Pair.json\";\nimport {makeBatchRequest} from \"./promisify\";\nimport {updatePrices, updateTotals} from \"../redux/slices/coineusSlice\";\n\nexport default function getPairPrices() {\n    const _store = store.getState();\n    const {pairs, rpc} = _store.coineus;\n\n    getAVAX(pairs, rpc.avax);\n}\n\nfunction getAVAX(pairs, rpc) {\n\n\n    //AVAX\n    const web3AVAX = new Web3(rpc);\n    const usdc_avax = new web3AVAX.eth.Contract(unipair_abi, pairs.USDCAVAXpair);\n    const burnit_avax = new web3AVAX.eth.Contract(unipair_abi, pairs.BRNAVAXpair);\n\n    const callsAVAX = [\n        usdc_avax.methods.getReserves().call,\n        burnit_avax.methods.getReserves().call\n    ]\n\n    makeBatchRequest(web3AVAX, callsAVAX)\n        .then(resp => {\n            const [\n                usdc_avax_reserves,\n                burnit_avax_reserves\n            ] = resp\n\n            const avax_price = usdc_avax_reserves.reserve1/usdc_avax_reserves.reserve0 * (10**12)\n\n            //AVAX\n            store.dispatch(updatePrices({\n                chain: 'avax',\n                contract_address: 'native',\n                price: {\n                    inUSD: avax_price,\n                    inAVAX: 1\n                }\n            }));\n\n            //USDC\n            store.dispatch(updatePrices({\n                chain: 'avax',\n                contract_address: '0xB97EF9Ef8734C71904D8002F8b6Bc66Dd9c48a6E',\n                price: {\n                    inUSD: 1,\n                    inAVAX: usdc_avax_reserves.reserve0/usdc_avax_reserves.reserve1 / (10**12)\n                }\n            }));\n\n            const brn0 = burnit_avax_reserves.reserve0 / (10**9)\n            const brn1 = burnit_avax_reserves.reserve1 / (10**18)\n\n            //BURNIT\n            store.dispatch(updatePrices({\n                chain: 'avax',\n                contract_address: '0x9CcAd19669259C1FBF13FDa959400C871b3d0E00',\n                price: {\n                    inAVAX: brn1/brn0,\n                    inUSD: brn1/brn0 * avax_price\n                }\n            }));\n\n            store.dispatch(updateTotals('avax'));\n\n        });\n}\n","import * as React from \"react\";\nimport {ArcSeries, FlexibleWidthXYPlot} from \"react-vis\";\nimport {Paper, Typography, Grid} from \"@mui/material\";\nimport {makeStyles} from \"@mui/styles\";\nimport {Autorenew, Whatshot, Savings} from \"@mui/icons-material\";\n\nconst useStyles = makeStyles((theme) => ({\n    xyplot: {\n        margin: '0 auto',\n    },\n}));\n\nfunction BurnSupply(props) {\n    const classes = useStyles();\n\n    const {burnt, supply, percent, staked} = props;\n\n    const angle = 360 * percent * (Math.PI / 180);\n\n    const percent2 = staked ? (staked - burnt) / supply : 0;\n    const angle2 = 360 * percent2 * (Math.PI / 180);\n\n    const burntValue = (percent * 100).toFixed(2);\n    const percentStaked = staked ? ((staked / supply) * 100).toFixed(2) : 0;\n\n    const colors = {\n        burned: '#ff9933',\n        supply: '#C70039',\n    }\n\n    return (\n        <Paper style={{padding: 20}}>\n            <FlexibleWidthXYPlot\n                xDomain={[-5, 5]}\n                yDomain={[-5, 5]}\n                height={250}\n                margin={{left: 0, right: 0, top: 0, bottom: 0}}\n                className={classes.xyplot}\n            >\n                <ArcSeries\n                    radiusDomain={[0, 10]}\n                    center={{x: 0, y: 0}}\n                    data={[\n                        {\n                            angle0: 0,\n                            angle: Math.PI * 2,\n                            opacity: 1,\n                            radius: 6.75,\n                            radius0: 6,\n                            color: colors.supply,\n                        },\n                        {\n                            angle0: angle,\n                            angle: angle + angle2,\n                            opacity: 1,\n                            radius: 6.75,\n                            radius0: 6,\n                            color: colors.staked,\n                        },\n                        {\n                            angle0: 0,\n                            angle: angle,\n                            opacity: 1,\n                            radius: 6.75,\n                            radius0: 6,\n                            color: colors.burned,\n                        },\n                    ]}\n                    colorType={'literal'}\n                />\n            </FlexibleWidthXYPlot>\n            <Typography\n                style={{\n                    height: 0,\n                    width: '100%',\n                    textAlign: 'center',\n                    top: -155,\n                    position: 'relative',\n                    fontSize: 30,\n                    fontWeight: '700',\n                }}\n            >\n                {burntValue}\n                <span\n                    style={{\n                        fontSize: 12,\n                        fontWeight: '400',\n                        marginTop: -10,\n                        display: 'block',\n                    }}\n                >\n          % BURNED\n        </span>\n            </Typography>\n            <Grid container direction=\"row\" alignItems=\"center\">\n                <Grid item>\n                    <Autorenew\n                        style={{color: colors.supply, marginRight: 10, marginTop: 6}}\n                    />\n                </Grid>\n                <Grid item>\n                    <Typography style={{color: colors.supply, fontSize: 18}}>{supply.toLocaleString()} <Typography\n                        variant=\"caption\">SUPPLY</Typography></Typography>\n                </Grid>\n            </Grid>\n\n            <Grid container direction=\"row\" alignItems=\"center\">\n                <Grid item>\n                    <Whatshot\n                        style={{color: colors.burned, marginRight: 10, marginTop: 3}}\n                    />\n                </Grid>\n                <Grid item>\n                    <Typography style={{color: colors.burned, fontSize: 18}}>{burnt.toLocaleString()} <Typography\n                        variant=\"caption\">BURNED</Typography></Typography>\n                </Grid>\n            </Grid>\n        </Paper>\n    );\n}\n\nexport default BurnSupply;\n","import {useEffect, useState} from \"react\";\nimport Web3 from \"web3\";\nimport coineus_abi from \"../abis/coineus.json\";\nimport dividend_distributor_abi from \"../abis/DividendDistributor.json\";\nimport {makeBatchRequest} from \"../utils/promisify\";\nimport {Container, Grid, ListItem, ListItemText, Paper, Typography} from \"@mui/material\";\nimport BurnSupply from \"../components/BurntSupply\";\nimport {useGetTokenQuery} from \"../redux/services/dexscreener\";\nimport {CoineusCryptoFormat, CoineusUSDFormat} from \"../utils/currency_format\";\nimport {useSelector} from \"react-redux\";\nimport ArrowCircleUpIcon from \"@mui/icons-material/ArrowCircleUp\";\nimport ArrowCircleDownIcon from \"@mui/icons-material/ArrowCircleDown\";\nimport { useTheme } from '@mui/material/styles';\n\nconst BRN_TOKEN_ADDRESS = '0x9CcAd19669259C1FBF13FDa959400C871b3d0E00';\n\nexport default function Stats() {\n\n    const theme = useTheme();\n\n    const {rpc} = useSelector( state => state.coineus);\n    const [totalD, setTotalD] = useState(0);\n\n    const [totalBurnt, setTotalBurnt] = useState(0);\n\n    const {data} = useGetTokenQuery(BRN_TOKEN_ADDRESS, {\n        pollingInterval: 60000\n    });\n\n    //updates coineus info\n    useEffect(() => {\n        getCoineusInfo();\n        const interval = setInterval(getCoineusInfo, 60000)\n        return () => clearInterval(interval);\n    }, [])\n\n    const getCoineusInfo = () => {\n        const web3 = new Web3(rpc.avax);\n        const contract = new web3.eth.Contract(coineus_abi, BRN_TOKEN_ADDRESS);\n        const burnit_dividends_contract = new web3.eth.Contract(dividend_distributor_abi, '0x32b82215a5ebb48acf7faadded562bc175716920');\n\n        const calls = [\n            contract.methods.balanceOf('0x000000000000000000000000000000000000dEaD').call,\n            burnit_dividends_contract.methods.totalDividends().call\n        ];\n\n        makeBatchRequest(web3, calls).then(resp => {\n            let [\n                burnt,\n                totalDividends\n            ] = resp;\n\n            setTotalD(totalDividends / (10**6));\n            setTotalBurnt(burnt / (10 ** 9))\n        });\n\n    }\n\n    return (\n        <Container maxWidth=\"sm\">\n            <Grid container spacing={2} style={{marginTop: -5, paddingBottom: 20}}>\n\n                <Grid item xs={12}>\n                    <Paper style={{backgroundColor: theme.palette.primary.main, color: \"#fff\"}}>\n                        <ListItem>\n                            <ListItemText\n                                primary={`${totalD.toLocaleString('en-US', {\n                                    maximumFractionDigits: 2,\n                                    minimumFractionDigits: 2\n                                })} USDC` || '--'}\n                                secondary=\"Total Rewards All-time\"\n                                primaryTypographyProps={{fontWeight: 700, fontSize: '2.125rem'}}\n                                secondaryTypographyProps={{color: \"#fff\"}}\n                            />\n                        </ListItem>\n                    </Paper>\n                </Grid>\n\n                <Grid item xs={12}>\n                    <BurnSupply\n                        supply={10000000}\n                        burnt={totalBurnt}\n                        staked={0}\n                        percent={totalBurnt / 10000000}\n                    />\n                </Grid>\n\n                <Grid item xs={12}>\n                    <Paper>\n                        <ListItem>\n                            <ListItemText\n                                primary={<>\n                                    {data?.pairs[0]?.priceChange?.h24 >= 0 ? <ArrowCircleUpIcon style={{color: '#00ff00', marginRight: 5, verticalAlign: 'sub'}}/> :\n                                        <ArrowCircleDownIcon style={{color: '#ff0000', marginRight: 5, verticalAlign: 'sub'}}/>}\n                                    <Typography fontSize={20} style={{display:\"inline-block\"}} fontWeight={700}>{`${data?.pairs[0]?.priceChange?.h24 || '--'}%`}</Typography>\n                                </>}\n                                secondary=\"24HR CHANGE\"\n                            />\n                        </ListItem>\n                    </Paper>\n                </Grid>\n\n                <Grid item xs={12}>\n                    <Paper>\n                        <ListItem>\n                            <ListItemText\n                                primary={CoineusUSDFormat(data?.pairs[0]?.fdv)}\n                                secondary=\"Fully Diluted Value\"\n                                primaryTypographyProps={{fontWeight: 700, fontSize: '2.125rem'}}\n                            />\n                        </ListItem>\n                    </Paper>\n                </Grid>\n\n                <Grid item xs={12}>\n                    <Paper>\n                        <ListItem>\n                            <ListItemText\n                                primary={CoineusUSDFormat(data?.pairs[0]?.liquidity.usd)}\n                                secondary=\"Total Liquidity\"\n                                primaryTypographyProps={{fontWeight: 700, fontSize: '2.125rem'}}\n                            />\n                        </ListItem>\n                        <ListItem>\n                            <ListItemText\n                                primary={CoineusCryptoFormat(data?.pairs[0]?.liquidity.base)}\n                                secondary=\"BurnIt Token (BRN)\"\n                                primaryTypographyProps={{ fontWeight: 700}}\n                            />\n                            <ListItemText\n                                primary={CoineusCryptoFormat(data?.pairs[0]?.liquidity.quote)}\n                                secondary=\"Wrapped AVAX (WAVAX)\"\n                                primaryTypographyProps={{fontWeight: 700}}\n                            />\n                        </ListItem>\n                    </Paper>\n                </Grid>\n\n                <Grid item xs={12}>\n                    <Paper>\n                        <ListItem>\n                            <ListItemText\n                                primary={CoineusUSDFormat(data?.pairs[0]?.volume.h24)}\n                                secondary=\"24 Hour Volume\"\n                                primaryTypographyProps={{fontWeight: 700, fontSize: '2.125rem'}}\n                            />\n                        </ListItem>\n                        <ListItem>\n                            <ListItemText\n                                primary={data?.pairs[0]?.txns.h24.buys}\n                                secondary=\"Buys\"\n                                primaryTypographyProps={{ fontWeight: 700}}\n                            />\n                            <ListItemText\n                                primary={data?.pairs[0]?.txns.h24.sells}\n                                secondary=\"Sells\"\n                                primaryTypographyProps={{fontWeight: 700}}\n                            />\n                        </ListItem>\n                    </Paper>\n                </Grid>\n\n            </Grid>\n        </Container>\n    )\n\n}","import {\n    AppBar,\n    Avatar,\n    Button,\n    CssBaseline,\n    Drawer,\n    Grid,\n    IconButton, Link,\n    List, ListItem, ListItemText, ListSubheader,\n    ThemeProvider,\n    Toolbar, Typography\n} from \"@mui/material\";\nimport theme from './theme';\nimport logo from './images/logo.jpg';\nimport {\n    HashRouter as Router,\n    Routes,\n    Route,\n    Link as RouterLink\n} from \"react-router-dom\";\n\nimport HomePage from \"./views/HomePage\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {useEffect, useState} from \"react\";\nimport Web3 from \"web3\";\nimport useWeb3Modal from \"./hooks/useWeb3Modal\";\nimport {\n    resetWallet,\n    updateWalletAddress,\n    updateWalletChain,\n    updateWalletProviderType,\n} from \"./redux/slices/coineusSlice\";\nimport getPairPrices from \"./utils/get_prices\";\nimport MenuIcon from '@mui/icons-material/Menu';\nimport CloseIcon from '@mui/icons-material/Close';\nimport useDexScreener from \"./hooks/useDexScreener\";\nimport Stats from \"./views/Stats\";\nimport getUserBalances from \"./utils/get_balances\";\n\nexport default function Coineus() {\n\n    const dispatch = useDispatch();\n    const {wallet} = useSelector(state => state.coineus);\n\n    useDexScreener();\n\n    const [menuOpen, setMenuOpen] = useState(false);\n    const [web3Modal, setWeb3Modal] = useState(null);\n    const web3ModalProvider = useWeb3Modal();\n\n    useEffect(() => {\n        if (window.ethereum) {\n            connectProvider(window.ethereum)\n        }\n        changeWeb3Modal();\n    }, []);\n\n    async function changeWeb3Modal() {\n        const web3mod = await web3ModalProvider.getWeb3Modal();\n        if (web3mod.providerController.cachedProvider) {\n            const provider = await web3mod.connect()\n            await connectProvider(provider)\n        }\n        setWeb3Modal(web3mod);\n    }\n\n    async function connectWallet() {\n        const provider = await web3Modal.connect();\n        await connectProvider(provider)\n    }\n\n    const connectProvider = async (provider) => {\n        window.provider = provider\n        const web3 = new Web3(provider);\n        subscribeProvider(provider)\n        const accounts = await web3.eth.getAccounts();\n        if (accounts && accounts.length) {\n            //set wallet address\n            dispatch(updateWalletAddress(accounts[0]))\n        }\n        const chainId = parseInt(await web3.eth.net.getId())\n        dispatch(updateWalletChain(chainId));\n        dispatch(updateWalletProviderType(!!provider.bridge ? 'walletconnect' : 'injected'))\n    }\n\n    const subscribeProvider = (provider) => {\n        provider.on(\"close\", () => {\n            clearWallet();\n        });\n\n        provider.on(\"accountsChanged\", async (acc) => {\n            if (window.provider) {\n                dispatch(updateWalletAddress(acc[0]))\n            }\n        });\n\n        provider.on(\"chainChanged\", async (networkId) => {\n            if (window.provider) {\n                const chainId = parseInt(networkId)\n                dispatch(updateWalletChain(chainId));\n            }\n        });\n    }\n\n    const clearWallet = async () => {\n        const web3 = new Web3(window.provider);\n        if (web3 && web3.currentProvider && web3.currentProvider.close) {\n            await web3.currentProvider.close();\n        }\n        dispatch(resetWallet())\n        await web3Modal.clearCachedProvider();\n        window.provider = null;\n    }\n\n    //updates pricing\n    useEffect(() => {\n        getPairPrices();\n        const interval = setInterval(getPairPrices, 60000)\n        return () => clearInterval(interval);\n    }, []);\n\n    //updates balances\n    useEffect(() => {\n        getUserBalances(wallet.address);\n        const interval = setInterval(getUserBalances, 60000)\n        return () => clearInterval(interval);\n    }, [wallet.address]);\n\n    return (\n        <ThemeProvider theme={theme}>\n            <CssBaseline/>\n            <Router>\n                <AppBar enableColorOnDark>\n                    <Toolbar>\n                        <IconButton\n                            edge=\"start\"\n                            color=\"inherit\"\n                            aria-label=\"open drawer\"\n                            onClick={() => setMenuOpen(true)}\n                        >\n                            <MenuIcon/>\n                        </IconButton>\n\n                        <RouterLink\n                            to={`/`}\n                            style={{textDecoration: 'none', display: 'flex'}}\n                        >\n                            <Avatar src={logo} height={40}/>\n                        </RouterLink>\n                        <div style={{flexGrow: 1}}/>\n                        {\n                            wallet.address ?\n                                <Button\n                                    variant=\"outlined\"\n                                    color=\"inherit\"\n                                    size=\"small\"\n                                    onClick={() => {\n                                        clearWallet();\n                                    }}\n                                >{getChainLogo(wallet.chain)} 0X... {wallet.address?.substr(-6)}</Button>\n                                :\n                                <Button\n                                    variant=\"outlined\"\n                                    color=\"inherit\"\n                                    size=\"small\"\n                                    onClick={() => connectWallet()}>Connect</Button>\n                        }\n                    </Toolbar>\n                </AppBar>\n                <Grid container style={{marginTop: 64}}>\n                    <Grid item xs={12}>\n                        <Routes>\n                            <Route\n                                path={`/`}\n                                exact={true}\n                                element={<HomePage/>}\n                            />\n                            <Route\n                                path={`/stats`}\n                                exact={true}\n                                element={<Stats />}\n                            />\n                        </Routes>\n                    </Grid>\n                </Grid>\n\n                <Drawer\n                    open={menuOpen}\n                    onClose={() => setMenuOpen(false)}\n                    PaperProps={{style: {minWidth: 240, backgroundImage: 'none'}}}\n\n                >\n                    <IconButton onClick={() => setMenuOpen(false)} style={{alignSelf: 'end'}}>\n                        <CloseIcon/>\n                    </IconButton>\n                    <List onClick={() => setMenuOpen(false)}>\n\n                        <ListSubheader color=\"primary\">BURNIT PROJECT</ListSubheader>\n                        <ListItem button component={RouterLink} to={'/'}>\n                            <ListItemText primary=\"Home\" primaryTypographyProps={{style:{fontWeight:700}}}/>\n                        </ListItem>\n                        <ListItem button component={RouterLink} to={'/stats'}>\n                            <ListItemText primary=\"Stats\" primaryTypographyProps={{style:{fontWeight:700}}}/>\n                        </ListItem>\n\n                        <ListSubheader color=\"primary\">BRN TOKEN</ListSubheader>\n                        <ListItem button component={Link} href={'https://traderjoexyz.com/trade?inputCurrency=AVAX&outputCurrency=0x9CcAd19669259C1FBF13FDa959400C871b3d0E00'} target=\"_blank\">\n                            <ListItemText primary=\"Buy\" primaryTypographyProps={{style:{fontWeight:700}}}/>\n                        </ListItem>\n                        <ListItem button component={Link} href={'https://www.dextools.io/app/avalanche/pair-explorer/0x2f2ac0b0de45af118e97f73b2ca9bd65b06e0894'} target=\"_blank\">\n                            <ListItemText primary=\"Chart\" primaryTypographyProps={{style:{fontWeight:700}}}/>\n                        </ListItem>\n\n                        <ListSubheader color=\"primary\">SOCIAL</ListSubheader>\n                        <ListItem button component={Link} href={'https://t.me/burnitproject'} target=\"_blank\">\n                            <ListItemText primary=\"Telegram\" primaryTypographyProps={{style:{fontWeight:700}}}/>\n                        </ListItem>\n                        <ListItem button component={Link} href={'https://t.me/burnitproject'} target=\"_blank\">\n                            <ListItemText primary=\"Twitter\" primaryTypographyProps={{style:{fontWeight:700}}}/>\n                        </ListItem>\n                    </List>\n                </Drawer>\n\n            </Router>\n        </ThemeProvider>\n    )\n}\n\nfunction getChainLogo(id) {\n    const size = {width: 16, height: 16}\n    const style = {marginRight: 10}\n    switch (id) {\n        case 1:\n            return <Avatar src='https://coineus.app/assets/tokens/eth/logo.png' sx={size} style={style}/>\n        case 56:\n            return <Avatar src='https://coineus.app/assets/tokens/bnb/logo.png' sx={size} style={style}/>\n        case 122:\n            return <Avatar src='https://coineus.app/assets/tokens/fuse/logo.png' sx={size} style={style}/>\n        case 43114:\n            return <Avatar src='https://coineus.app/assets/tokens/avax/logo.png' sx={size} style={style}/>\n        default:\n            return ''\n    }\n\n\n}","import {useEffect} from \"react\";\nimport tokenList from \"../utils/tokenList.json\";\nimport axios from \"axios\";\nimport {useDispatch} from \"react-redux\";\nimport {updateTokens} from \"../redux/slices/coineusSlice\";\n\nexport default function useDexScreener() {\n\n    const dispatch = useDispatch();\n\n    useEffect(() => {\n\n        const getDexScreener = () => {\n            let calls = [];\n            Object.entries(tokenList.tokens).map(([chain,tokens]) => {\n\n                Object.entries(tokens).map(([contract_address, token_info]) => {\n\n                    let call = axios\n                        .get(`https://api.dexscreener.com/latest/dex/tokens/${contract_address === 'native' ? token_info.wrap : contract_address}`)\n                        .then(resp => {\n                            const {pairs} = resp.data;\n                            token_info.pairs = pairs;\n                            token_info.pair = pairs[0];\n                        })\n                    calls.push(call);\n                    return [contract_address, token_info];\n                })\n                return [chain,tokens];\n            })\n\n            Promise.all(calls).then(() => {\n                dispatch(updateTokens(tokenList.tokens));\n            })\n        }\n\n        getDexScreener();\n        const interval = setInterval(getDexScreener, 60000)\n        return () => clearInterval(interval);\n    }, [])\n\n    return {\n        tokenList\n    }\n\n}","import Web3Modal from \"web3modal\";\nimport WalletConnectProvider from \"@walletconnect/web3-provider\";\n\nexport default function useWeb3Modal() {\n\n    const getWeb3Modal = async () => {\n\n        const providerOptions = {\n            walletconnect: {\n                display: {\n                    name: \"WalletConnect\",\n                    description: \"Scan qrcode with your mobile wallet\"\n                },\n                package: WalletConnectProvider,\n                options: {\n                    bridge: \"https://bridge.walletconnect.org\",\n                    network: 'binance',\n                    rpc: {\n                        56: 'https://bsc-dataseed.binance.org/',\n                        122: 'https://rpc.fuse.io',\n                        43114: 'https://api.avax.network/ext/bc/C/rpc',\n                        1: 'https://cloudflare-eth.com/'\n                    },\n                    qrcode: true\n                },\n            },\n        };\n\n        return new Web3Modal({\n            disableInjectedProvider: false,\n            cacheProvider: false, // optional\n            providerOptions // required\n        });\n    }\n\n    return {\n        getWeb3Modal,\n    }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport Coineus from \"./Coineus\";\nimport {Provider} from \"react-redux\";\nimport store from \"./redux/store\";\n\nReactDOM.render(\n    <React.StrictMode>\n        <Provider store={store}>\n            <Coineus/>\n        </Provider>\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n"],"sourceRoot":""}